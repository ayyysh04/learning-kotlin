->Bytecode is the low-level code that is generated by a compiler after it translates source code into machine code. It is a set of instructions that can be executed by a virtual machine.

->In the context of Android development, the Java code is compiled into bytecode, which is then executed on the Android Runtime (ART) virtual machine. When an Android app is built, all the Java classes and resources are compiled into a single Dalvik Executable (DEX) file, which contains the bytecode for the entire application.
However, there is a limit to the size of the DEX file, and it is set at 64KB for Android versions prior to 5.0. This can be a problem for apps that have a large number of methods, such as apps that use third-party libraries or frameworks. When the DEX file size exceeds this limit, the app will fail to build with a "Too Many Methods" error.
To overcome this limit, the multidex feature was introduced in Android 5.0. This feature allows an app to have multiple DEX files, each containing a subset of the application's classes and methods. When an app is launched, the Android system loads all the DEX files and merges them into a single virtual machine instance.
In summary, multidex is used to overcome the "Too Many Methods" error that can occur when an app has a large number of methods. It allows an app to have multiple DEX files, each containing a subset of the application's classes and methods, which are merged into a single virtual machine instance at runtime.

refer : https://developer.android.com/build/multidex